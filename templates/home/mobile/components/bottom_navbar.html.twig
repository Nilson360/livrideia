<nav class="fixed bottom-0 left-0 right-0 bg-white/95 backdrop-blur-md border-t border-gray-200 shadow-lg z-50">
    <div class="flex justify-around items-center px-2 py-2 max-w-md mx-auto">
        {# Accueil #}
        <a href="{{ path('app_home') }}"
           class="flex flex-col items-center p-2 rounded-xl transition-all duration-200 active:scale-95 min-w-[68px] relative
                  {% if app.request.attributes.get('_route') == 'app_home' %}text-[#FF8A00] bg-gradient-to-br from-orange-50 to-orange-100/50 shadow-sm{% else %}text-gray-500 active:bg-gray-50{% endif %}">
            <div class="relative">
                <svg class="w-6 h-6 mb-1" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                </svg>
                {% if app.request.attributes.get('_route') == 'app_home' %}
                    <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-[#FF8A00] rounded-full shadow-sm"></div>
                {% endif %}
            </div>
            <span class="text-xs {% if app.request.attributes.get('_route') == 'app_home' %}font-semibold{% else %}font-medium{% endif %}">Accueil</span>
        </a>

        {# Découvrir #}
        <a href="{{ path('app_discover') }}"
           class="flex flex-col items-center p-2 rounded-xl transition-all duration-200 active:scale-95 min-w-[68px] relative
                  {% if app.request.attributes.get('_route') == 'app_menu' %}text-[#FF8A00] bg-gradient-to-br from-orange-50 to-orange-100/50 shadow-sm{% else %}text-gray-500 active:bg-gray-50{% endif %}">
            <div class="relative">
                <svg class="w-6 h-6 mb-1" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
                {% if app.request.attributes.get('_route') == 'app_menu' %}
                    <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-[#FF8A00] rounded-full shadow-sm"></div>
                {% endif %}
            </div>
            <span class="text-xs {% if app.request.attributes.get('_route') == 'app_menu' %}font-semibold{% else %}font-medium{% endif %}">Découvrir</span>
        </a>

        {# Bouton Publier Central #}
{#        <button onclick="openPublishModal()" class="bg-gradient-to-br from-[#FF8A00] to-[#e67300] text-white p-3 rounded-full shadow-lg active:scale-95 transition-all duration-200 relative overflow-hidden">#}
{#            <svg class="w-7 h-7 relative z-10" viewBox="0 0 24 24" fill="currentColor">#}
{#                <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>#}
{#            </svg>#}
{#            <div class="absolute inset-0 bg-white/20 rounded-full animate-pulse"></div>#}
{#        </button>#}

        {# Notifications avec Badge Dynamique #}
        <a href="{{ path('notifications_list') }}"
           class="flex flex-col items-center p-2 rounded-xl transition-all duration-200 active:scale-95 relative min-w-[68px]
                  {% if app.request.attributes.get('_route') == 'notifications_list' %}text-[#FF8A00] bg-gradient-to-br from-orange-50 to-orange-100/50 shadow-sm{% else %}text-gray-500 active:bg-gray-50{% endif %}">
            <div class="relative">
                <svg class="w-6 h-6 mb-1" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z"/>
                </svg>
                {# Badge notification dynamique #}
                <div id="notification-badge" class="absolute -top-1 -right-1 bg-gradient-to-r from-red-500 to-red-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-semibold border-2 border-white shadow-sm transition-all duration-300 hidden">
                    <span id="notification-count">0</span>
                </div>
                {% if app.request.attributes.get('_route') == 'notifications_list' %}
                    <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-[#FF8A00] rounded-full shadow-sm"></div>
                {% endif %}
            </div>
            <span class="text-xs {% if app.request.attributes.get('_route') == 'notifications_list' %}font-semibold{% else %}font-medium{% endif %}">Notifications</span>
        </a>

        {# Profil avec Avatar #}
        <a href="{{ path('dashboard_user_profile') }}"
           class="flex flex-col items-center p-2 rounded-xl transition-all duration-200 active:scale-95 min-w-[68px] relative
                  {% if app.request.attributes.get('_route') == 'dashboard_user_profile' %}text-[#FF8A00] bg-gradient-to-br from-orange-50 to-orange-100/50 shadow-sm{% else %}text-gray-500 active:bg-gray-50{% endif %}">
            <div class="relative mb-1">
                <div class="w-6 h-6 rounded-full overflow-hidden border border-gray-300">
                    <img src="{{ asset(app.user.avatarPath|default('uploads/avatars/user_default.png')) }}"
                         alt="Profile"
                         class="w-full h-full object-cover">
                </div>
                <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 bg-emerald-500 border border-white rounded-full"></div>
                {% if app.request.attributes.get('_route') == 'dashboard_user_profile' %}
                    <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-[#FF8A00] rounded-full shadow-sm"></div>
                {% endif %}
            </div>
            <span class="text-xs {% if app.request.attributes.get('_route') == 'dashboard_user_profile' %}font-semibold{% else %}font-medium{% endif %}">Profil</span>
        </a>
    </div>

    {# Indicateur de page active - Barre de progression en haut #}
    <div class="absolute top-0 left-0 h-0.5 bg-gradient-to-r from-[#FF8A00] to-[#e67300] transition-all duration-300 nav-indicator"
         style="width: 20%; margin-left: {% if app.request.attributes.get('_route') == 'app_home' %}0%{% elseif app.request.attributes.get('_route') == 'dashboard_user_profile' %}20%{% elseif app.request.attributes.get('_route') == 'notifications_list' %}60%{% elseif app.request.attributes.get('_route') == 'app_menu' %}80%{% else %}0%{% endif %};"></div>
</nav>

{# Script pour interactions et animations #}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const notificationBadge = document.getElementById('notification-badge');
        const notificationCount = document.getElementById('notification-count');
        let currentCount = 0;

        async function updateNotificationCount() {
            try {
                const response = await fetch('{{ path("notifications_unread_count") }}', {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                const newCount = data.count || 0;

                if (newCount !== currentCount) {
                    updateBadgeDisplay(newCount);
                    currentCount = newCount;
                }
            } catch (error) {
                console.warn('Erro ao buscar contador de notificações:', error);
            }
        }

        function updateBadgeDisplay(count) {
            if (count > 0) {
                notificationCount.textContent = count > 99 ? '99+' : count;
                notificationBadge.classList.remove('hidden');

                if (count > currentCount) {
                    notificationBadge.style.transform = 'scale(1.2)';
                    setTimeout(() => {
                        notificationBadge.style.transform = 'scale(1)';
                    }, 200);
                }
            } else {
                notificationBadge.classList.add('hidden');
            }
        }

        updateNotificationCount();

        setInterval(updateNotificationCount, 30000);

        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                updateNotificationCount();
            }
        });

        window.addEventListener('focus', updateNotificationCount);
    });
</script>
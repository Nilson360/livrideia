{% extends 'home/mobile/base.mobile.html.twig' %}

{% block title %}{{ user.username }} - Profil{% endblock %}

{% block content %}
    <div class="bg-gray-50 min-h-screen">
        {# Header avec photo de couverture #}
        <div class="relative">
            {# Photo de couverture #}
            <div class="h-32 bg-gradient-to-br from-[#FF8A00] to-[#e67300] relative overflow-hidden">
                {% if user.coverPath %}
                    <img src="{{ asset(user.coverPath) }}" alt="Photo de couverture" class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent"></div>
                {% else %}
                    {# Motif géométrique par défaut #}
                    <div class="absolute inset-0 opacity-20">
                        <svg class="w-full h-full" viewBox="0 0 100 100" fill="none">
                            <circle cx="25" cy="25" r="3" fill="white"/>
                            <circle cx="50" cy="15" r="2" fill="white"/>
                            <circle cx="75" cy="30" r="2.5" fill="white"/>
                            <circle cx="15" cy="50" r="2" fill="white"/>
                            <circle cx="40" cy="45" r="3" fill="white"/>
                            <circle cx="70" cy="55" r="2" fill="white"/>
                            <circle cx="85" cy="75" r="2.5" fill="white"/>
                            <circle cx="30" cy="80" r="2" fill="white"/>
                        </svg>
                    </div>
                {% endif %}

                {# Bouton retour #}
                <button onclick="history.back()"
                        class="absolute top-4 left-4 p-2 bg-black/30 backdrop-blur-sm rounded-full text-white active:scale-95 transition-transform">
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"/>
                    </svg>
                </button>

                {# Badge de vérification si applicable #}
                {% if user.isVerified %}
                    <div class="absolute top-4 right-4 p-2 bg-blue-500 rounded-full">
                        <svg class="w-5 h-5 text-white" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                    </div>
                {% endif %}
            </div>

            {# Avatar et informations principales #}
            <div class="px-4 -mt-16 relative z-10">
                <div class="flex flex-col items-center">
                    <div class="relative">
                        <div class="w-32 h-32 rounded-full border-4 border-white overflow-hidden shadow-xl bg-white">
                            {% if user.avatarPath %}
                                <img src="{{ asset(user.avatarPath) }}" alt="Photo de profil"
                                     class="w-full h-full object-cover">
                            {% else %}
                                <img src="{{ asset('/images/default-profile.png') }}" alt="Photo de profil"
                                     class="w-full h-full object-cover">
                            {% endif %}
                        </div>

                        {# Badge de statut en ligne #}
                        <div class="absolute top-2 right-2 w-6 h-6 bg-emerald-500 border-2 border-white rounded-full shadow-sm"></div>

                        {# Badge de vérification sur l'avatar #}
                        {% if user.isVerified %}
                            <div class="absolute bottom-2 right-2 w-8 h-8 bg-blue-500 border-2 border-white rounded-full flex items-center justify-center shadow-lg">
                                <svg class="w-4 h-4 text-white" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                                </svg>
                            </div>
                        {% endif %}
                    </div>

                    {# Informations utilisateur #}
                    <div class="text-center mt-4 mb-6">
                        <div class="flex items-center justify-center mb-2">
                            <h1 class="text-2xl font-bold text-gray-800">{{ user.fullName }}</h1>
                            {% if user.isVerified %}
                                <svg class="w-6 h-6 text-blue-500 ml-2" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                                </svg>
                            {% endif %}
                        </div>
                        <p class="text-[#FF8A00] font-medium text-lg">@{{ user.username }}</p>
                        <p class="text-gray-500 text-sm mt-1">Membre depuis {{ user.createdAt|date('M Y') }}</p>

                        {# Stats utilisateur #}
                        <div class="flex items-center justify-center space-x-6 mt-4">
                            <div class="text-center">
                                <div class="text-xl font-bold text-gray-800">{{ posts|length }}</div>
                                <div class="text-xs text-gray-500">Publications</div>
                            </div>
                            <div class="w-px h-8 bg-gray-300"></div>
                            <div class="text-center">
                                <div class="text-xl font-bold text-gray-800" id="friends-count">
                                    {% set friendsCount = 0 %}
                                    {% for friendship in user.sentFriendRequests %}
                                        {% if friendship.status == 'accepted' %}
                                            {% set friendsCount = friendsCount + 1 %}
                                        {% endif %}
                                    {% endfor %}
                                    {% for friendship in user.receivedFriendRequests %}
                                        {% if friendship.status == 'accepted' %}
                                            {% set friendsCount = friendsCount + 1 %}
                                        {% endif %}
                                    {% endfor %}
                                    {{ friendsCount }}
                                </div>
                                {# <div class="text-xs text-gray-500">Amis</div> #}
                            </div>
                            <div class="w-px h-8 bg-gray-300"></div>
                            <div class="text-center">
                                <div class="text-xl font-bold text-gray-800">{{ user.likes|length }}</div>
                                <div class="text-xs text-gray-500">J'aime</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {# Boutons d'action #}
        <div class="px-4 mb-6">
            <div class="flex gap-3">
                {% set isFriend = false %}
                {% set pendingRequest = false %}

                {# Vérifier les relations d'amitié #}
                {% for friendship in app.user.sentFriendRequests %}
                    {% if friendship.receiver.id == user.id and friendship.status == 'accepted' %}
                        {% set isFriend = true %}
                    {% endif %}
                {% endfor %}

                {% for friendship in app.user.receivedFriendRequests %}
                    {% if friendship.sender.id == user.id and friendship.status == 'accepted' %}
                        {% set isFriend = true %}
                    {% endif %}
                {% endfor %}

                {% for request in app.user.sentFriendRequests %}
                    {% if request.receiver.id == user.id and request.status == 'pending' %}
                        {% set pendingRequest = true %}
                    {% endif %}
                {% endfor %}

                {% if isFriend %}
                    <a href="{{ path('app_chat') }}?user={{ user.id }}"
                       class="flex-1 bg-gradient-to-r from-emerald-500 to-emerald-600 text-white py-3 rounded-2xl text-center font-semibold shadow-lg active:scale-95 transition-transform flex items-center justify-center">
                        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
                        </svg>
                        Envoyer un message
                    </a>
                    <button onclick="confirmRemoveFriend({{ user.id }})"
                            class="p-3 border-2 border-red-500 text-red-500 rounded-2xl active:scale-95 transition-transform flex items-center justify-center">
                        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
                        </svg>
                    </button>
                {% elseif pendingRequest %}
                    <button disabled
                            class="flex-1 bg-gray-300 text-gray-500 py-3 rounded-2xl text-center font-semibold flex items-center justify-center">
                        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                        </svg>
                        Demande envoyée
                    </button>
                {% else %}
                    <button onclick="sendFriendRequest({{ user.id }})"
                            class="flex-1 bg-gradient-to-r from-[#FF8A00] to-[#e67300] text-white py-3 rounded-2xl text-center font-semibold shadow-lg active:scale-95 transition-transform flex items-center justify-center">
                        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                        </svg>
                        Ajouter comme ami
                    </button>
                {% endif %}

                {# Bouton options #}
                <div class="relative">
                    <button onclick="toggleOptionsMenu()"
                            class="p-3 border-2 border-gray-300 text-gray-600 rounded-2xl active:scale-95 transition-transform flex items-center justify-center">
                        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                        </svg>
                    </button>

                    {# Menu déroulant d'options #}
                    <div id="options-menu"
                         class="absolute right-0 top-full mt-2 bg-white rounded-xl shadow-lg border border-gray-200 py-2 z-20 hidden min-w-[160px]">
                        <button onclick="shareProfile()"
                                class="flex items-center w-full px-4 py-3 text-sm text-gray-700 active:bg-gray-50">
                            <svg class="w-4 h-4 mr-3 text-gray-400" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"/>
                            </svg>
                            Partager le profil
                        </button>
                        <button onclick="reportUser()"
                                class="flex items-center w-full px-4 py-3 text-sm text-red-600 active:bg-red-50">
                            <svg class="w-4 h-4 mr-3" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                            </svg>
                            Signaler l'utilisateur
                        </button>
                    </div>
                </div>
            </div>
        </div>

        {# Navigation par onglets moderne #}
        <div class="bg-white border-t border-gray-200 sticky top-0 z-20">
            <div class="flex px-4">
                <button class="tab-button flex-1 py-4 text-center text-[#FF8A00] border-b-2 border-[#FF8A00] font-semibold relative"
                        data-tab="posts">
                    <span class="relative z-10">Publications</span>
                    <div class="absolute bottom-0 left-0 right-0 h-0.5 bg-[#FF8A00] rounded-full"></div>
                </button>
                <button class="tab-button flex-1 py-4 text-center text-gray-500 font-medium" data-tab="friends">
                    Amis
                </button>
                <button class="tab-button flex-1 py-4 text-center text-gray-500 font-medium" data-tab="photos">
                    Photos
                </button>
            </div>
        </div>

        {# Contenu des onglets #}
        <div class="p-4">
            {# Onglet Publications #}
            <div id="posts-tab" class="tab-content">
                {% if posts|length > 0 %}
                    <div class="space-y-4">
                        {% for post in posts %}
                            <article class="bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden">
                                <div class="p-4">
                                    {# Header du post #}
                                    <div class="flex items-center mb-3">
                                        <img src="{{ asset(post.user.avatarPath|default('/images/default-profile.png')) }}"
                                             alt="{{ post.user.username }}"
                                             class="w-10 h-10 rounded-full border-2 border-gray-100 mr-3">
                                        <div class="flex-1">
                                            <h3 class="font-semibold text-gray-800">{{ post.user.fullName }}</h3>
                                            <p class="text-gray-500 text-xs flex items-center">
                                                <svg class="w-3 h-3 mr-1" viewBox="0 0 24 24" fill="currentColor">
                                                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                                                </svg>
                                                {{ post.createdAt|date('j M Y à H:i') }}
                                            </p>
                                        </div>
                                    </div>

                                    {# Contenu du post #}
                                    <div class="mb-3">
                                        <p class="text-gray-700 leading-relaxed">{{ post.content }}</p>
                                    </div>
                                </div>

                                {# Image du post #}
                                {% if post.imagePath %}
                                    <div class="px-4 pb-4">
                                        <div class="relative rounded-xl overflow-hidden bg-gray-100">
                                            <div class="aspect-[4/3] w-full">
                                                <img src="{{ asset('uploads/' ~ post.imagePath) }}"
                                                     alt="Image de publication"
                                                     class="w-full h-full object-cover">
                                            </div>
                                        </div>
                                    </div>
                                {% endif %}

                                {# Stats et actions #}
                                <div class="px-4 pb-4">
                                    <div class="flex items-center justify-between text-sm text-gray-500 mb-3">
                                        <div class="flex items-center space-x-4">
                                            <div class="flex items-center">
                                                <div class="flex -space-x-1 mr-2">
                                                    <div class="w-4 h-4 bg-gradient-to-br from-red-500 to-red-600 rounded-full border border-white flex items-center justify-center">
                                                        <span class="text-xs">❤️</span>
                                                    </div>
                                                </div>
                                                <span class="font-medium text-xs">{{ post.likes|length }} j'aime</span>
                                            </div>
                                            <span class="text-xs">{{ post.comments|length }} commentaires</span>
                                        </div>
                                    </div>

                                    <div class="flex items-center border-t border-gray-100 pt-2 -mx-4 px-4">
                                        <button class="flex items-center justify-center flex-1 py-2 text-gray-500 active:text-red-500 transition-colors">
                                            <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                                                <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                                            </svg>
                                            <span class="text-sm font-medium">J'aime</span>
                                        </button>
                                        <button class="flex items-center justify-center flex-1 py-2 text-gray-500 active:text-blue-500 transition-colors">
                                            <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                                                <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
                                            </svg>
                                            <span class="text-sm font-medium">Commenter</span>
                                        </button>
                                    </div>
                                </div>
                            </article>
                        {% endfor %}
                    </div>
                {% else %}
                    <div class="flex flex-col items-center justify-center py-16 text-center">
                        <div class="w-20 h-20 rounded-full bg-gray-100 flex items-center justify-center mb-4">
                            <svg class="w-10 h-10 text-gray-400" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
                            </svg>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-800 mb-2">Aucune publication</h3>
                        <p class="text-gray-500 text-sm">{{ user.fullName }} n'a encore rien publié.</p>
                    </div>
                {% endif %}
            </div>

            {# Onglet Amis #}
            <div id="friends-tab" class="tab-content hidden">
                <div id="friends-list-container">
                    <div class="text-center py-8">
                        <div class="w-8 h-8 mx-auto border-2 border-t-[#FF8A00] border-gray-200 rounded-full animate-spin"></div>
                        <p class="text-sm text-gray-500 mt-2">Chargement des amis...</p>
                    </div>
                </div>
            </div>

            {# Onglet Photos #}
            <div id="photos-tab" class="tab-content hidden">
                <div class="flex flex-col items-center justify-center py-16 text-center">
                    <div class="w-20 h-20 rounded-full bg-gray-100 flex items-center justify-center mb-4">
                        <svg class="w-10 h-10 text-gray-400" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">Aucune photo</h3>
                    <p class="text-gray-500 text-sm">{{ user.fullName }} n'a encore partagé aucune photo.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Gestion des onglets
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabContents = document.querySelectorAll('.tab-content');

            tabButtons.forEach(button => {
                button.addEventListener('click', function () {
                    // Réinitialiser tous les onglets
                    tabButtons.forEach(btn => {
                        btn.classList.remove('text-[#FF8A00]', 'border-b-2', 'border-[#FF8A00]', 'font-semibold');
                        btn.classList.add('text-gray-500', 'font-medium');
                        const indicator = btn.querySelector('.absolute');
                        if (indicator) indicator.remove();
                    });

                    tabContents.forEach(content => {
                        content.classList.add('hidden');
                    });

                    // Activer l'onglet cliqué
                    this.classList.remove('text-gray-500', 'font-medium');
                    this.classList.add('text-[#FF8A00]', 'border-b-2', 'border-[#FF8A00]', 'font-semibold');

                    // Ajouter l'indicateur visuel
                    const indicator = document.createElement('div');
                    indicator.className = 'absolute bottom-0 left-0 right-0 h-0.5 bg-[#FF8A00] rounded-full';
                    this.appendChild(indicator);

                    const tabName = this.getAttribute('data-tab');
                    document.getElementById(tabName + '-tab').classList.remove('hidden');

                    // Charger le contenu des amis si nécessaire
                    if (tabName === 'friends' && !document.querySelector('#friends-list-container .friend-item')) {
                        loadFriends();
                    }
                });
            });

            // Animation d'apparition
            const elements = document.querySelectorAll('article, .bg-white');
            elements.forEach((element, index) => {
                element.style.opacity = '0';
                element.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    element.style.transition = 'all 0.4s ease-out';
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Gestion du menu d'options
        function toggleOptionsMenu() {
            const menu = document.getElementById('options-menu');
            menu.classList.toggle('hidden');
        }

        // Fermer le menu en cliquant ailleurs
        document.addEventListener('click', function (e) {
            if (!e.target.closest('#options-menu') && !e.target.closest('button[onclick="toggleOptionsMenu()"]')) {
                document.getElementById('options-menu').classList.add('hidden');
            }
        });

        // Fonction pour charger les amis
        async function loadFriends() {
            try {
                const response = await fetch('{{ path("app_profile_friends", {"id": user.id}) }}', {
                    headers: {'X-Requested-With': 'XMLHttpRequest'}
                });

                if (!response.ok) {
                    throw new Error('Erreur réseau');
                }

                const html = await response.text();
                document.getElementById('friends-list-container').innerHTML = html;
            } catch (error) {
                console.error('Erreur lors du chargement des amis:', error);
                document.getElementById('friends-list-container').innerHTML =
                    '<div class="text-center py-8"><p class="text-gray-500">Erreur lors du chargement des amis.</p></div>';
            }
        }

        // Fonctions pour les actions d'amitié
        async function sendFriendRequest(userId) {
            try {
                const response = await fetch(`/app/friend/add/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de l\'envoi de la demande d\'ami');
                }

                location.reload();
            } catch (error) {
                console.error('Erreur:', error);
                // Vous pourriez ajouter ici une notification d'erreur à l'utilisateur
            }
        }

        // Fonction pour confirmer la suppression d'un ami
        function confirmRemoveFriend(userId) {
            if (confirm('Êtes-vous sûr de vouloir retirer cet ami ?')) {
                removeFriend(userId);
            }
        }

        // Fonction pour retirer un ami
        async function removeFriend(userId) {
            try {
                const response = await fetch(`/app/friend/remove/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (!response.ok) {
                    throw new Error('Erreur lors de la suppression de l\'ami');
                }

                location.reload();
            } catch (error) {
                console.error('Erreur:', error);
                // Vous pourriez ajouter ici une notification d'erreur à l'utilisateur
            }
        }

        // Fonction pour partager le profil
        function shareProfile() {
            if (navigator.share) {
                navigator.share({
                    title: 'Profil sur Livrideia',
                    url: window.location.href
                })
                    .catch(error => console.error('Erreur lors du partage:', error));
            } else {
                // Fallback pour les navigateurs qui ne supportent pas l'API Web Share
                const url = window.location.href;
                navigator.clipboard.writeText(url)
                    .then(() => alert('Lien copié dans le presse-papier !'))
                    .catch(err => console.error('Erreur lors de la copie:', err));
            }
        }

        function reportUser() {
            alert('Fonctionnalité de signalement en cours de développement');
        }
    </script>

{% endblock %}
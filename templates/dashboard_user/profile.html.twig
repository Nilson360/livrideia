{% extends 'home/base_home.html.twig' %}

{% block title %}Profil de {{ user.username }}{% endblock %}

{% block body %}
    <div class="max-w-5xl mx-auto mt-8 mb-16 px-4">
        <!-- Image de couverture (cachée sur mobile) -->
        <div class="hidden sm:block h-56 bg-gray-300 rounded-t-lg relative">
            {# Optionnel : insérer ici une image de couverture #}
        </div>
        <!-- Section Profil -->
        <div class="bg-white rounded-b-lg shadow-lg p-6">
            <div class="flex flex-col sm:flex-row items-center">
                <div class="w-32 h-32 rounded-full bg-gray-200 border-4 border-white overflow-hidden">
                    {% if user.avatarPath is defined and user.avatarPath %}
                        <img src="{{ asset(user.avatarPath) }}" alt="Photo de profil de {{ user.username }}" class="object-cover w-full h-full">
                    {% else %}
                        <img src="{{ asset('/images/default-profile.png') }}" alt="Photo de profil par défaut" class="object-cover w-full h-full">
                    {% endif %}
                </div>
                <div class="mt-4 sm:mt-0 sm:ml-6 text-center sm:text-left">
                    <h1 class="text-3xl font-bold text-gray-800">{{ user.username }}</h1>
                    <p class="text-gray-600">{{ user.fullName }}</p>
                    <div class="mt-4 flex flex-col sm:flex-row gap-2 sm:gap-4 justify-center sm:justify-start">
                        <a href="{{ path('dashboard-user-profile-edit') }}"
                           class="bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600 text-sm">
                            Modifier le profil
                        </a>
                        <a href="{{ path('dashboard-user-profile-change-password') }}"
                           class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 text-sm">
                            Changer de mot de passe
                        </a>
                    </div>
                </div>
            </div>

            <!-- Onglets de navigation (Publications, Photos, Mes amis) -->
            <div class="mt-6 border-b border-gray-200">
                <ul class="flex justify-center space-x-6">
                    <li>
                        <a href="#" class="tab-link pb-2 border-b-2 border-blue-500 font-semibold text-gray-800 text-sm" data-tab="posts">
                            Publications
                        </a>
                    </li>
                    <li>
                        <a href="#" class="tab-link pb-2 text-gray-500 hover:text-gray-700 text-sm" data-tab="photos">
                            Photos
                        </a>
                    </li>
                    <li>
                        <a href="#" class="tab-link pb-2 text-gray-500 hover:text-gray-700 text-sm" data-tab="friends">
                            Mes amis
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Conteneur pour le contenu principal -->
        <div class="mt-6">
            <!-- Contenu par défaut : Publications -->
            <div id="posts-content">
                {% block posts %}
                    {% include 'home_page_components/posts.html.twig' %}
                {% endblock %}
            </div>
            <!-- Conteneur pour la liste d'amis chargée via AJAX -->
            <div id="friends-content" class="hidden"></div>
            <!-- Conteneur pour les photos (à compléter ultérieurement) -->
            <div id="photos-content" class="hidden"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ encore_entry_script_tags('app') }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion des onglets de navigation
            document.querySelectorAll('.tab-link').forEach(link => {
                link.addEventListener('click', function(event) {
                    event.preventDefault();

                    // Mise à jour du style actif
                    document.querySelectorAll('.tab-link').forEach(l => {
                        l.classList.remove('border-blue-500', 'font-semibold', 'text-gray-800');
                        l.classList.add('text-gray-500', 'hover:text-gray-700');
                    });
                    this.classList.add('border-blue-500', 'font-semibold', 'text-gray-800');
                    this.classList.remove('text-gray-500', 'hover:text-gray-700');

                    // Masquer tous les contenus
                    document.getElementById('posts-content').classList.add('hidden');
                    document.getElementById('friends-content').classList.add('hidden');
                    document.getElementById('photos-content').classList.add('hidden');

                    const tab = this.getAttribute('data-tab');

                    if (tab === 'posts') {
                        document.getElementById('posts-content').classList.remove('hidden');
                    } else if (tab === 'friends') {
                        const friendsContent = document.getElementById('friends-content');
                        friendsContent.classList.remove('hidden');
                        // Charger le fragment via AJAX s'il n'est pas déjà chargé
                        if (!friendsContent.innerHTML.trim()) {
                            fetch('{{ path("app_profile_friends", {"id": user.id}) }}', {
                                headers: { 'X-Requested-With': 'XMLHttpRequest' }
                            })
                                .then(response => response.text())
                                .then(html => {
                                    friendsContent.innerHTML = html;
                                    // Attacher l'écouteur pour le bouton "Supprimer l'amitié"
                                    friendsContent.querySelectorAll('.remove-friend-btn').forEach(btn => {
                                        btn.addEventListener('click', function(e) {
                                            e.preventDefault();
                                            let friendId = this.getAttribute('data-friend-id');
                                            removeFriend(friendId, this);
                                        });
                                    });
                                })
                                .catch(error => console.error('Erreur lors du chargement des amis:', error));
                        }
                    } else if (tab === 'photos') {
                        const photosContent = document.getElementById('photos-content');
                        photosContent.classList.remove('hidden');
                        if (!photosContent.innerHTML.trim()) {
                            photosContent.innerHTML = '<p class="text-center text-gray-600 mt-4">Aucune photo pour le moment.</p>';
                        }
                    }
                });
            });

            // Fonction pour supprimer une amitié via AJAX
            function removeFriend(friendId, button) {
                fetch(`/friend/remove/${friendId}`, {
                    method: "POST",
                    headers: { "X-Requested-With": "XMLHttpRequest" }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'removed') {
                            // Supprimer l'élément correspondant dans la liste
                            let friendElement = button.closest('.friend-item');
                            if (friendElement) {
                                friendElement.remove();
                            }
                        } else {
                            alert(data.error);
                        }
                    })
                    .catch(error => console.error("Erreur lors de la suppression de l'amitié:", error));
            }
        });
    </script>
{% endblock %}

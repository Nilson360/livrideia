{% extends 'auth/desktop/base_auth.html.twig' %}

{% block title %}Inscription - Livridea{% endblock %}

{% block body %}
    <div class="text-center mb-8">
        <div class="p-3 bg-gradient-to-br from-emerald-500 to-emerald-600 rounded-2xl inline-flex mb-4">
            <svg class="w-8 h-8 text-white" viewBox="0 0 24 24" fill="currentColor">
                <path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"/>
            </svg>
        </div>
        <h2 class="text-2xl font-bold text-gray-800 mb-2">Rejoignez Livridea</h2>
        <p class="text-gray-500">Créez votre compte et découvrez une communauté de passionnés de lecture</p>
    </div>

    <form method="post" class="space-y-6">
        <!-- Erreurs globales -->
        {% for error in registrationForm.vars.errors %}
            <div class="bg-red-50 border border-red-200 text-red-800 text-sm p-4 rounded-xl flex items-start">
                <svg class="w-5 h-5 mr-3 flex-shrink-0 mt-0.5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                </svg>
                <div>
                    <div class="font-medium">Erreur</div>
                    <div class="mt-1">{{ error.message }}</div>
                </div>
            </div>
        {% endfor %}

        <!-- Grid pour organiser les champs -->
        <div class="grid grid-cols-1 gap-6">

            <!-- Nom d'utilisateur -->
            <div>
                {{ form_label(registrationForm.username, 'Nom d\'utilisateur', {
                    'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
                }) }}
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"/>
                        </svg>
                    </div>
                    {{ form_widget(registrationForm.username, {
                        'attr': {
                            'class': 'w-full pl-10 pr-4 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                            'placeholder': 'Choisissez un nom d\'utilisateur unique'
                        }
                    }) }}
                </div>
                {{ form_errors(registrationForm.username) }}
            </div>

            <!-- Email -->
            <div>
                {{ form_label(registrationForm.email, 'Adresse email', {
                    'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
                }) }}
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                        </svg>
                    </div>
                    {{ form_widget(registrationForm.email, {
                        'attr': {
                            'class': 'w-full pl-10 pr-4 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                            'placeholder': 'votre@email.com'
                        }
                    }) }}
                </div>
                {{ form_errors(registrationForm.email) }}
            </div>

            <!-- Nom complet -->
            <div>
                {{ form_label(registrationForm.fullName, 'Nom complet', {
                    'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
                }) }}
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    {{ form_widget(registrationForm.fullName, {
                        'attr': {
                            'class': 'w-full pl-10 pr-4 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                            'placeholder': 'Votre prénom et nom'
                        }
                    }) }}
                </div>
                {{ form_errors(registrationForm.fullName) }}
            </div>

            <!-- Date de naissance -->
            <div>
                {{ form_label(registrationForm.birthday, 'Date de naissance', {
                    'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
                }) }}
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    {{ form_widget(registrationForm.birthday, {
                        'attr': {
                            'class': 'w-full pl-10 pr-4 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200'
                        }
                    }) }}
                </div>
                {{ form_errors(registrationForm.birthday) }}
            </div>

            <!-- Mot de passe -->
            <div>
                {{ form_label(registrationForm.plainPassword, 'Mot de passe', {
                    'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
                }) }}
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    {{ form_widget(registrationForm.plainPassword, {
                        'attr': {
                            'class': 'w-full pl-10 pr-12 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                            'placeholder': 'Créez un mot de passe sécurisé',
                            'id': 'password-field'
                        }
                    }) }}
                    <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password">
                        <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-open" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                            <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                        </svg>
                        <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-closed hidden" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd"/>
                            <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"/>
                        </svg>
                    </button>
                </div>

                <!-- Indicateur de force du mot de passe -->
                <div class="mt-2">
                    <div class="flex items-center justify-between mb-1">
                        <span class="text-xs text-gray-500">Force du mot de passe</span>
                        <span id="password-strength-text" class="text-xs text-gray-500">-</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div id="password-strength-bar" class="h-2 rounded-full transition-all duration-300 bg-gray-300" style="width: 0%"></div>
                    </div>
                    <p class="text-xs text-gray-500 mt-1">Minimum 6 caractères recommandés</p>
                </div>

                {{ form_errors(registrationForm.plainPassword) }}
            </div>
        </div>

        <!-- Conditions d'utilisation -->
        <div class="space-y-4">
            <div class="flex items-start gap-3">
                {{ form_widget(registrationForm.agreeTerms, {
                    'attr': {'class': 'h-5 w-5 text-[#FF8A00] border-gray-300 rounded focus:ring-[#FF8A00] focus:ring-2 mt-0.5'}
                }) }}
                <div class="text-sm">
                    <label for="{{ registrationForm.agreeTerms.vars.id }}" class="text-gray-700">
                        J'accepte les
                        <button type="button" onclick="toggleTerms()" class="text-[#FF8A00] hover:text-[#e67300] underline font-medium transition-colors">
                            conditions d'utilisation
                        </button>
                        et la
                        <a href="#" class="text-[#FF8A00] hover:text-[#e67300] underline font-medium transition-colors">
                            politique de confidentialité
                        </a>
                    </label>
                </div>
            </div>
            {{ form_errors(registrationForm.agreeTerms) }}

            <!-- Contenu des conditions (masqué par défaut) -->
            <div id="termsContent" class="hidden bg-blue-50 border border-blue-200 rounded-xl p-4 text-sm text-blue-800 max-h-40 overflow-y-auto">
                <h4 class="font-semibold mb-2">Conditions d'utilisation de Livridea</h4>
                <div class="space-y-2 text-xs">
                    <p>En créant un compte sur Livridea, vous acceptez de :</p>
                    <ul class="list-disc list-inside space-y-1 ml-2">
                        <li>Respecter la communauté et les autres utilisateurs</li>
                        <li>Ne pas publier de contenu offensant ou inapproprié</li>
                        <li>Respecter les droits d'auteur dans vos publications</li>
                        <li>Maintenir la confidentialité de vos identifiants</li>
                        <li>Utiliser la plateforme de manière responsable</li>
                    </ul>
                    <p class="mt-2">Ces conditions peuvent être mises à jour. Vous serez notifié des changements importants.</p>
                </div>
            </div>

            <!-- Newsletter -->
            <div class="flex items-start gap-3">
                {{ form_widget(registrationForm.isSubscribedToNewsletter, {
                    'attr': {'class': 'h-5 w-5 text-[#FF8A00] border-gray-300 rounded focus:ring-[#FF8A00] focus:ring-2 mt-0.5'}
                }) }}
                <div class="text-sm">
                    <label for="{{ registrationForm.isSubscribedToNewsletter.vars.id }}" class="text-gray-700">
                        Je souhaite recevoir la newsletter Livridea avec les recommandations de lecture et les actualités littéraires
                    </label>
                    <p class="text-xs text-gray-500 mt-1">Vous pourrez vous désabonner à tout moment</p>
                </div>
            </div>
            {{ form_errors(registrationForm.isSubscribedToNewsletter) }}
        </div>

        {{ form_rest(registrationForm) }}

        <!-- Bouton d'inscription -->
        <button type="submit"
                class="w-full bg-gradient-to-r from-emerald-500 to-emerald-600 text-white py-3 px-4 rounded-xl font-semibold hover:shadow-lg transition-all duration-200 hover:scale-105 flex items-center justify-center">
            <svg class="w-5 h-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"/>
            </svg>
            Créer mon compte Livridea
        </button>
    </form>

    <!-- Lien vers la connexion -->
    <div class="mt-8 pt-6 border-t border-gray-100 text-center">
        <p class="text-gray-600 mb-4">Vous avez déjà un compte ?</p>
        <a href="{{ path('app_login') }}"
           class="inline-flex items-center justify-center w-full px-4 py-3 border border-gray-200 text-gray-700 bg-gray-50 rounded-xl hover:bg-gray-100 font-medium transition-all duration-200 hover:scale-105">
            <svg class="w-5 h-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
            </svg>
            Se connecter à mon compte
        </a>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion de l'affichage/masquage du mot de passe
            const togglePassword = document.querySelector('.toggle-password');
            const passwordInput = document.getElementById('password-field');
            const eyeOpen = document.querySelector('.eye-open');
            const eyeClosed = document.querySelector('.eye-closed');

            if (togglePassword && passwordInput) {
                togglePassword.addEventListener('click', function() {
                    if (passwordInput.type === 'password') {
                        passwordInput.type = 'text';
                        eyeOpen.classList.add('hidden');
                        eyeClosed.classList.remove('hidden');
                    } else {
                        passwordInput.type = 'password';
                        eyeOpen.classList.remove('hidden');
                        eyeClosed.classList.add('hidden');
                    }
                });
            }

            // Vérification de la force du mot de passe
            const strengthBar = document.getElementById('password-strength-bar');
            const strengthText = document.getElementById('password-strength-text');

            if (passwordInput && strengthBar && strengthText) {
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strength = calculatePasswordStrength(password);
                    updatePasswordStrengthDisplay(strength);
                });
            }

            function calculatePasswordStrength(password) {
                let score = 0;

                if (password.length >= 6) score += 1;
                if (password.length >= 10) score += 1;
                if (/[a-z]/.test(password)) score += 1;
                if (/[A-Z]/.test(password)) score += 1;
                if (/[0-9]/.test(password)) score += 1;
                if (/[^A-Za-z0-9]/.test(password)) score += 1;

                return Math.min(score, 4);
            }

            function updatePasswordStrengthDisplay(strength) {
                const colors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-emerald-500'];
                const texts = ['Très faible', 'Faible', 'Moyen', 'Fort'];
                const widths = ['25%', '50%', '75%', '100%'];

                // Reset classes
                strengthBar.className = 'h-2 rounded-full transition-all duration-300';

                if (strength > 0) {
                    strengthBar.classList.add(colors[strength - 1]);
                    strengthBar.style.width = widths[strength - 1];
                    strengthText.textContent = texts[strength - 1];
                    strengthText.className = `text-xs ${colors[strength - 1].replace('bg-', 'text-')}`;
                } else {
                    strengthBar.classList.add('bg-gray-300');
                    strengthBar.style.width = '0%';
                    strengthText.textContent = '-';
                    strengthText.className = 'text-xs text-gray-500';
                }
            }

            // Animation des icônes au focus
            const inputs = document.querySelectorAll('input[type="text"], input[type="email"], input[type="password"], input[type="date"]');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    const icon = this.parentElement.querySelector('svg');
                    if (icon) {
                        icon.classList.remove('text-gray-400');
                        icon.classList.add('text-[#FF8A00]');
                    }
                });

                input.addEventListener('blur', function() {
                    if (!this.value) {
                        const icon = this.parentElement.querySelector('svg');
                        if (icon) {
                            icon.classList.remove('text-[#FF8A00]');
                            icon.classList.add('text-gray-400');
                        }
                    }
                });
            });

            // Animation du bouton pendant la soumission
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const submitButton = this.querySelector('button[type="submit"]');

                submitButton.innerHTML = `
                    <svg class="animate-spin w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                        <circle cx="12" cy="12" r="2"/>
                        <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1m15.36-6.36L19 4m-14 0L1.64 7.64m12.72 8.72L19 20m-14 0l-2.64-2.64"/>
                    </svg>
                    Création du compte...
                `;
                submitButton.disabled = true;
            });

            // Nettoyage des erreurs lors de la saisie
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    this.classList.remove('border-red-500');
                });
            });
        });

        // Fonction pour afficher/masquer les conditions
        function toggleTerms() {
            const termsContent = document.getElementById('termsContent');
            termsContent.classList.toggle('hidden');
        }
    </script>
{% endblock %}
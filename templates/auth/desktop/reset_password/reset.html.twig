{% extends 'auth/desktop/base_auth.html.twig' %}

{% block title %}Nouveau mot de passe - Livridea{% endblock %}

{% block body %}
    <div class="text-center mb-8">
        <div class="p-3 bg-gradient-to-br from-emerald-500 to-emerald-600 rounded-2xl inline-flex mb-4">
            <svg class="w-8 h-8 text-white" viewBox="0 0 24 24" fill="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
        </div>
        <h2 class="text-2xl font-bold text-gray-800 mb-2">Créer un nouveau mot de passe</h2>
        <p class="text-gray-500">Choisissez un mot de passe sécurisé pour votre compte</p>
    </div>

    <!-- Conseils de sécurité -->
    <div class="mb-6 bg-blue-50 border border-blue-200 rounded-xl p-4">
        <div class="flex items-start">
            <div class="flex-shrink-0">
                <svg class="w-5 h-5 text-blue-600 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-semibold text-blue-800">Conseils pour un mot de passe sécurisé</h3>
                <ul class="mt-2 text-sm text-blue-700 space-y-1">
                    <li>• Au moins 8 caractères</li>
                    <li>• Mélangez majuscules, minuscules, chiffres et symboles</li>
                    <li>• Évitez les informations personnelles</li>
                    <li>• Utilisez un mot de passe unique pour Livridea</li>
                </ul>
            </div>
        </div>
    </div>

    {{ form_start(resetForm, {'attr': {'class': 'space-y-6'}}) }}

    <!-- Champ mot de passe -->
    <div>
        {{ form_label(resetForm.plainPassword.first, 'Nouveau mot de passe', {
            'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
        }) }}
        <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"/>
                </svg>
            </div>
            {{ form_widget(resetForm.plainPassword.first, {
                'attr': {
                    'class': 'w-full pl-10 pr-12 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                    'placeholder': 'Entrez votre nouveau mot de passe',
                    'id': 'new-password'
                }
            }) }}
            <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password" data-target="new-password">
                <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-open" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                </svg>
                <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-closed hidden" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd"/>
                    <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"/>
                </svg>
            </button>
        </div>

        <!-- Indicateur de force du mot de passe -->
        <div class="mt-2">
            <div class="flex items-center justify-between mb-1">
                <span class="text-xs text-gray-500">Force du mot de passe</span>
                <span id="password-strength-text" class="text-xs text-gray-500">-</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
                <div id="password-strength-bar" class="h-2 rounded-full transition-all duration-300 bg-gray-300" style="width: 0%"></div>
            </div>
        </div>

        {{ form_errors(resetForm.plainPassword.first) }}
    </div>

    <!-- Confirmation mot de passe -->
    <div>
        {{ form_label(resetForm.plainPassword.second, 'Confirmer le mot de passe', {
            'label_attr': {'class': 'block text-gray-700 font-semibold mb-2'}
        }) }}
        <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                </svg>
            </div>
            {{ form_widget(resetForm.plainPassword.second, {
                'attr': {
                    'class': 'w-full pl-10 pr-12 py-3 border border-gray-200 rounded-xl bg-gray-50 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF8A00] focus:border-[#FF8A00] focus:bg-white transition-all duration-200',
                    'placeholder': 'Confirmez votre nouveau mot de passe',
                    'id': 'confirm-password'
                }
            }) }}
            <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password" data-target="confirm-password">
                <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-open" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                </svg>
                <svg class="w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer eye-closed hidden" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd"/>
                    <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"/>
                </svg>
            </button>
        </div>

        <!-- Indicateur de correspondance -->
        <div class="mt-2 text-xs" id="password-match-indicator" style="display: none;">
            <div class="flex items-center">
                <svg class="w-4 h-4 mr-1 text-emerald-500" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                </svg>
                <span class="text-emerald-600">Les mots de passe correspondent</span>
            </div>
        </div>

        {{ form_errors(resetForm.plainPassword.second) }}
    </div>

    <!-- Bouton de réinitialisation -->
    <button type="submit"
            class="w-full bg-gradient-to-r from-emerald-500 to-emerald-600 text-white py-3 px-4 rounded-xl font-semibold hover:shadow-lg transition-all duration-200 hover:scale-105 flex items-center justify-center">
        <svg class="w-5 h-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        Réinitialiser le mot de passe
    </button>

    {{ form_end(resetForm) }}

    <!-- Information de sécurité -->
    <div class="mt-8 pt-6 border-t border-gray-100">
        <div class="bg-amber-50 border border-amber-200 rounded-xl p-4">
            <div class="flex items-start">
                <svg class="w-5 h-5 text-amber-600 mt-0.5 mr-3 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                </svg>
                <div class="text-sm text-amber-800">
                    <div class="font-medium mb-1">Information importante</div>
                    <p>Une fois votre mot de passe réinitialisé, vous serez automatiquement connecté. Assurez-vous de le mémoriser ou de le noter en lieu sûr.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion de l'affichage/masquage des mots de passe
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-target');
                    const passwordInput = document.getElementById(targetId);
                    const eyeOpen = this.querySelector('.eye-open');
                    const eyeClosed = this.querySelector('.eye-closed');

                    if (passwordInput.type === 'password') {
                        passwordInput.type = 'text';
                        eyeOpen.classList.add('hidden');
                        eyeClosed.classList.remove('hidden');
                    } else {
                        passwordInput.type = 'password';
                        eyeOpen.classList.remove('hidden');
                        eyeClosed.classList.add('hidden');
                    }
                });
            });

            // Vérification de la force du mot de passe
            const newPasswordInput = document.getElementById('new-password');
            const confirmPasswordInput = document.getElementById('confirm-password');
            const strengthBar = document.getElementById('password-strength-bar');
            const strengthText = document.getElementById('password-strength-text');
            const matchIndicator = document.getElementById('password-match-indicator');

            if (newPasswordInput && strengthBar && strengthText) {
                newPasswordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strength = calculatePasswordStrength(password);
                    updatePasswordStrengthDisplay(strength);
                    checkPasswordMatch();
                });
            }

            if (confirmPasswordInput) {
                confirmPasswordInput.addEventListener('input', function() {
                    checkPasswordMatch();
                });
            }

            function calculatePasswordStrength(password) {
                let score = 0;

                if (password.length >= 8) score += 1;
                if (password.length >= 12) score += 1;
                if (/[a-z]/.test(password)) score += 1;
                if (/[A-Z]/.test(password)) score += 1;
                if (/[0-9]/.test(password)) score += 1;
                if (/[^A-Za-z0-9]/.test(password)) score += 1;

                return Math.min(score, 4);
            }

            function updatePasswordStrengthDisplay(strength) {
                const colors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-emerald-500'];
                const texts = ['Très faible', 'Faible', 'Moyen', 'Fort'];
                const widths = ['25%', '50%', '75%', '100%'];

                // Reset classes
                strengthBar.className = 'h-2 rounded-full transition-all duration-300';

                if (strength > 0) {
                    strengthBar.classList.add(colors[strength - 1]);
                    strengthBar.style.width = widths[strength - 1];
                    strengthText.textContent = texts[strength - 1];
                    strengthText.className = `text-xs ${colors[strength - 1].replace('bg-', 'text-')}`;
                } else {
                    strengthBar.classList.add('bg-gray-300');
                    strengthBar.style.width = '0%';
                    strengthText.textContent = '-';
                    strengthText.className = 'text-xs text-gray-500';
                }
            }

            function checkPasswordMatch() {
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (confirmPassword && newPassword) {
                    if (newPassword === confirmPassword) {
                        matchIndicator.style.display = 'block';
                        confirmPasswordInput.classList.remove('border-red-500');
                        confirmPasswordInput.classList.add('border-emerald-500');
                    } else {
                        matchIndicator.style.display = 'none';
                        confirmPasswordInput.classList.remove('border-emerald-500');
                        confirmPasswordInput.classList.add('border-red-500');
                    }
                } else {
                    matchIndicator.style.display = 'none';
                    confirmPasswordInput.classList.remove('border-red-500', 'border-emerald-500');
                }
            }

            // Animation des icônes au focus
            const inputs = document.querySelectorAll('input[type="password"]');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    const icon = this.parentElement.querySelector('svg');
                    if (icon) {
                        icon.classList.remove('text-gray-400');
                        icon.classList.add('text-[#FF8A00]');
                    }
                });

                input.addEventListener('blur', function() {
                    if (!this.value) {
                        const icon = this.parentElement.querySelector('svg');
                        if (icon) {
                            icon.classList.remove('text-[#FF8A00]');
                            icon.classList.add('text-gray-400');
                        }
                    }
                });
            });

            // Validation côté client et animation de soumission
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (!newPassword.trim() || newPassword.length < 8) {
                    e.preventDefault();
                    newPasswordInput.classList.add('border-red-500');
                    newPasswordInput.focus();
                    return;
                }

                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    confirmPasswordInput.classList.add('border-red-500');
                    confirmPasswordInput.focus();
                    return;
                }

                // Animation du bouton
                const submitButton = this.querySelector('button[type="submit"]');
                submitButton.innerHTML = `
                    <svg class="animate-spin w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                        <circle cx="12" cy="12" r="2"/>
                        <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1m15.36-6.36L19 4m-14 0L1.64 7.64m12.72 8.72L19 20m-14 0l-2.64-2.64"/>
                    </svg>
                    Réinitialisation en cours...
                `;
                submitButton.disabled = true;
            });
        });
    </script>
{% endblock %}